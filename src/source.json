{
    "complexities":
        [
            {"symbol": "O^2",
             "examples": 
                [
                    "Quicksort"
                ],
             "image": "second.png",
             "description": "O^2 DESCRIPTION"
            },
            {"symbol": "O(n log n)",
             "examples":
                [
                    "Mergesort",
                    "Timsort",
                    "Heapsort"
                ],
             "image": "third.png",
             "description": "THIRD"
            },
            {"symbol": "O(N^2)",
            "examples":
                    [
                        {"name": "Bubble sort",
                         "gif": "bubble.gif"},
                        "Bubble sort",
                        "Insertion sort",
                        "Selection sort",
                        "Tree sort",
                        "Bucket Sort"
                    ],
             "image": "On2.png",
             "description": "Quadratic time complexity. Often reflects the fact that the algorithm processes all (or a substantial number of) pairs of elements in a given input set. In the code it usually looks like a for loop embedded inside of another for loop. The examples are basic sorting algorithms like bubble, insertion or selection sort.",
             "resources": [],
             "rank": "bad"
            }, 
            {"symbol": "O(n(log(n))^2)",
             "examples": 
                [
                    "Shell sort"
                ]},
            {"symbol": "O(nk)",
            "examples": 
                [
                    "Radix sort"
                ]},
            {"symbol": "O(n+k)",
            "examples": 
                [
                    "Counting sort"
                ]}
        ]
}